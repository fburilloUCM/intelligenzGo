// Code generated by MockGen. DO NOT EDIT.
// Source: itemRetriever.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	data "github.com/IntelligenzCodeLab/hacker-news-scraper/data"
	gomock "github.com/golang/mock/gomock"
)

// MockRetriever is a mock of Retriever interface.
type MockRetriever struct {
	ctrl     *gomock.Controller
	recorder *MockRetrieverMockRecorder
}

// MockRetrieverMockRecorder is the mock recorder for MockRetriever.
type MockRetrieverMockRecorder struct {
	mock *MockRetriever
}

// NewMockRetriever creates a new mock instance.
func NewMockRetriever(ctrl *gomock.Controller) *MockRetriever {
	mock := &MockRetriever{ctrl: ctrl}
	mock.recorder = &MockRetrieverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRetriever) EXPECT() *MockRetrieverMockRecorder {
	return m.recorder
}

// GetItems mocks base method.
func (m *MockRetriever) GetItems(maxItems int) ([]data.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItems", maxItems)
	ret0, _ := ret[0].([]data.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetItems indicates an expected call of GetItems.
func (mr *MockRetrieverMockRecorder) GetItems(maxItems interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItems", reflect.TypeOf((*MockRetriever)(nil).GetItems), maxItems)
}
